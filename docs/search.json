[{"path":"/articles/intro_isoformic.html","id":"the-isoformic-method","dir":"Articles","previous_headings":"","what":"The Isoformic method","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Welcome isoformic, workflow isoform-level biological interpretation transcriptomic data.","code":""},{"path":"/articles/intro_isoformic.html","id":"information","dir":"Articles","previous_headings":"The Isoformic method","what":"Information","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"data used examples extracted paper: “Landscape Dysregulated Placental RNA Editing Associated Preeclampsia” analyzed generated RNA-Seq datasets preeclamptic control placentas. dataset chosen due many biological replicates high sequencing depth. tutorial encompass X different steps divided X unities type analysis want perform.","code":""},{"path":"/articles/intro_isoformic.html","id":"dependencies","dir":"Articles","previous_headings":"The Isoformic method","what":"Dependencies","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"NOTE: 2024-06-08 version Workflow described vignette maintained. installing v0.0.1 package run workflow use: Load dependency packages","code":"if (requireNamespace(remotes, quietly = TRUE)) {   remotes::install_github(\"luciorq/isoformic@v0.0.1\") } library(isoformic) library(fs) library(readr) library(dplyr) library(tidyr) library(stringr) # library(SummarizedExperiment) # library(tximeta) # library(fishpond)"},{"path":[]},{"path":"/articles/intro_isoformic.html","id":"initial-considerations","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data","what":"Initial Considerations","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"highly recommend use Salmon transcript-level abundance estimation swish method implemented fishpond R package isoform-level differential expression. GENCODE project offers good annotation isoforms human mouse genomes, including isoforms non-coding genes. Using sources annotation can render completely different results following analysis.","code":""},{"path":"/articles/intro_isoformic.html","id":"part-1-data-input","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data","what":"Part 1: Data input","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"version need two essential input two optional inputs. Essential input 1: transcript differential expression table. table can outputted kind differential expression software use needs contain 1) information Transcript name Ensembl Transcript ID per line 2) log2FoldChange information column named “log2FoldChange”. 3) p-value information column named “pvalue”. columns table used main analysis. DET table UNFILTERED version table. Example: Essential input 2: FASTA file GENCODE corresponds fasta used transcriptome alignment. need version since use names GENCODE version mergings. annotation used also need GENCODE since posses transcript_type column used information well. wish CAN provide information external source GENCODE, need table least three columns: 1)transcript_name column needs match gene names DET table TPM table, 2) gene-name column tell gene transcripts belong 3) transcript_type column. table also use transcript names GENCODE column stating transcript biotype also got GENCODE annotation. statistics can ‘pvalue’, ‘svalue’ ‘qvalue’ ‘log2FoldChange’ case control conditions also needed plots. Optional inputs: 1) Transcript per million (TPM) table matching transcripts differential expression table 2) GFF3 file transcriptome version corresponds FASTA 3) table differentially expressed genes data also use comparison. differential expression table can used pipeline authors, multiple testing, reached conclusion swish implementation differential transcript expression analysis using inferential replicate counts Salmon one performs best medium high depth transcriptome libraries looking number transcripts significant values. well annotated transcriptomes output results tests mentioned done using human data. Isoformic makes available example files can used model formatting necessary files running workflow. files can found following path. files available can seen : load table points libraries represent cases (treatment) controls. library, cases pregnant woman Preeclampsia controls matched pregnant without Preeclampsia.","code":"path_package(\"isoformic\") ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic PE1_DETs <- read_csv(path_package(\"isoformic\", \"extdata\", \"DETs_fixed.csv\")) head(PE1_DETs) ## # A tibble: 6 × 4 ##   transcript_id      log2FC  pvalue qvalue ##   <chr>               <dbl>   <dbl>  <dbl> ## 1 ENST00000456328.2 -0.692  0.0199  0.0940 ## 2 ENST00000488147.1  0.0731 0.652   0.812  ## 3 ENST00000466430.5 -0.146  0.364   0.590  ## 4 ENST00000442987.3 -0.183  0.0841  0.242  ## 5 ENST00000494149.2 -0.728  0.00599 0.0420 ## 6 ENST00000595919.1 -0.0789 0.951   0.977 path_package(\"isoformic\", \"extdata\") ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic/extdata path_package(\"isoformic\", \"extdata\") |>   dir_ls() ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic/extdata/DEGs_PE_fixed2.csv ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic/extdata/DETs_fixed.csv ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic/extdata/PE_1_DETs.csv ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic/extdata/PE_1_counts.csv ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic/extdata/c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic/extdata/hsapiens_REAC_subset.gmt ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic/extdata/isoformic-logo.png PE1_DETs <- path_package(\"isoformic\", \"extdata\", \"DETs_fixed.csv\") |>   read_csv() PE1_DEGs <- path_package(\"isoformic\", \"extdata\", \"DEGs_PE_fixed2.csv\") |>   read_csv() PE1_counts <- path_package(\"isoformic\", \"extdata\", \"PE_1_counts.csv\") |>   read_csv() |>   dplyr::rename(transcript_id = ...1) sample_table <- data.frame(   samples = colnames(PE1_counts)[2:ncol(PE1_counts)],   condition = c(rep(\"treatment\", 8), rep(\"control\", ncol(PE1_counts) - 9)) ) head(sample_table) ##       samples condition ## 1 SRR11498039 treatment ## 2 SRR11498040 treatment ## 3 SRR11498041 treatment ## 4 SRR11498042 treatment ## 5 SRR11498043 treatment ## 6 SRR11498044 treatment"},{"path":"/articles/intro_isoformic.html","id":"download-reference-files","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data > Part 1: Data input","what":"Download reference files","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"references used project obtained GENCODE Project version 34 Human genome annotation. annotation file GFF3 format obtained https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_34/gencode.v34.chr_patch_hapl_scaff.annotation.gff3.gz. step may take depending speed internet connection","code":"download_reference(version = \"34\", file_type = \"fasta\") ## [1] \"data-raw/gencode.v34.transcripts.fa.gz\" download_reference(version = \"34\", file_type = \"gff\") ## [1] \"data-raw/gencode.v34.chr_patch_hapl_scaff.annotation.gff3.gz\" # download_reference(version = \"34\", file_type = \"gtf\")"},{"path":"/articles/intro_isoformic.html","id":"part-2-transcript-to-gene-and-gene-to-transcript-reference-tables","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data","what":"Part 2: Transcript to Gene and Gene to transcript reference tables","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Using FASTA file GENCODE construct transcript per gene dictionary table add information main DEG, DET TPM table. step depend lot names columns tables Vignette decided change names keep consistency. input used FASTA file containing transcript sequences annotation information downloaded GENCODE website specific version used alignment. case GENCODE v34. header shows imported table still weird tidy, pass make_tx_to_gene function make tidy ready use. Now tx_to_gene table 6 columns order: Ensembl transcript id, Ensembl gene id, Havanna gene id, Havanna transcript id, transcript name, gene name, entrez gene number transcript type. DEG, DET TPM table need Ensembl gene id, Gene name transcript type information can convert tables transcript_name add type information gene DE DET table. Select columns gene id gene name info First add gene_name information DEG table Now transcript name TPM table DET table main table analysis.","code":"fasta_path <- \"data-raw/gencode.v34.transcripts.fa.gz\" read_lines(fasta_path, n_max = 5) ## [1] \">ENST00000456328.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000362751.1|DDX11L1-202|DDX11L1|1657|processed_transcript|\" ## [2] \"GTTAACTTGCCGTCAGCCTTTTCTTTGACCTCTTCTTTCTGTTCATGTGTATTTGCTGTC\"                                                                  ## [3] \"TCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGA\"                                                                  ## [4] \"TGCTGTGGTCTTCATCTGCAGGTGTCTGACTTCCAGCAACTGCTGGCCTGTGCCAGGGTG\"                                                                  ## [5] \"CAAGCTGAGCACTGGAGTGGAGTTTTCCTGTGGAGAGGAGCCATGCCTAGAGTGGGATGG\" tx_to_gene <- make_tx_to_gene(   file_path = fasta_path,   file_type = \"fasta\" ) head(tx_to_gene) ## # A tibble: 6 × 8 ##   transcript_id    gene_id havanna_gene_id havanna_transcript_id transcript_name ##   <chr>            <chr>   <chr>           <chr>                 <chr>           ## 1 ENST00000456328… ENSG00… OTTHUMG0000000… OTTHUMT00000362751.1  DDX11L1-202     ## 2 ENST00000450305… ENSG00… OTTHUMG0000000… OTTHUMT00000002844.2  DDX11L1-201     ## 3 ENST00000488147… ENSG00… OTTHUMG0000000… OTTHUMT00000002839.1  WASH7P-201      ## 4 ENST00000619216… ENSG00… -               -                     MIR6859-1-201   ## 5 ENST00000473358… ENSG00… OTTHUMG0000000… OTTHUMT00000002840.1  MIR1302-2HG-202 ## 6 ENST00000469289… ENSG00… OTTHUMG0000000… OTTHUMT00000002841.2  MIR1302-2HG-201 ## # ℹ 3 more variables: gene_name <chr>, entrez_id <chr>, transcript_type <chr> tx_to_gene <- tx_to_gene |>   dplyr::select(     transcript_id, gene_id,     transcript_name, gene_name,     transcript_type   ) gene_join <- tx_to_gene |>   dplyr::select(gene_id, gene_name) |>   distinct() PE1_DEGs <- PE1_DEGs |>   left_join(gene_join, by = \"gene_id\") tpm_join <- tx_to_gene |>   dplyr::select(transcript_id, transcript_name) |>   distinct() PE1_counts <- PE1_counts |>   left_join(tpm_join, by = c(\"transcript_id\"))"},{"path":"/articles/intro_isoformic.html","id":"part-3-constructing-the-main-table","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data","what":"Part 3: Constructing the main table","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Gene-level information input us categorical values added DET table. detail: need now transcript’s gene (1) pass gene-level expression cutoff values (2) type transcript belongs . multiple types Ensembl library definitions superpose one another, ones analyzed can seen figure  First add transcript name type information DET table gene expression level convert DEG table cutting get genes present DE exclude possible noise. used cutoffs absolute log2FC higher one pvalue lower 0.05 first filter DEG table significant ones add column main DET table using isDEGsig function. now tables need graphs analyses. One detail DET final table now allows us see genes whose transcripts differentially expressed genes simple dplyr filter. table represent cases characterized isoform switches, two transcripts gene expressed opposite directions makes total expression gene significant either -regulated.","code":"knitr::include_graphics(\"https://i.imgur.com/UWoAr0k.png\") transcript_joined <- tx_to_gene |>   dplyr::select(transcript_id, transcript_name, transcript_type) |>   distinct() PE1_DETs <- PE1_DETs |>   left_join(transcript_joined, by = \"transcript_id\") PE1_DEGs_new_names_sig <- PE1_DEGs |>   filter(abs(log2FC) >= 1) |>   filter(pvalue <= 0.05) |>   dplyr::select(gene_name) |>   drop_na() DEGs_sig_joined <- PE1_DEGs_new_names_sig |>   left_join(tx_to_gene, by = \"gene_name\") transcript_gene_join <- tx_to_gene |>   dplyr::select(transcript_name, gene_name) |>   distinct() PE1_DETs_final <- is_deg_sig(DEGs_sig_joined$transcript_name, PE1_DETs) PE1_DETs_final <- PE1_DETs_final |>   left_join(transcript_gene_join, by = \"transcript_name\") DETs_not_DEGs <- PE1_DETs_final |>   filter(pvalue < 0.05, abs(log2FC) > 1, DEG_sig == \"NO\")"},{"path":"/articles/intro_isoformic.html","id":"colors","dir":"Articles","previous_headings":"","what":"Colors","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"start plotting define general set colors used entire pipeline associated certain type transcript. colored abundant types separately less abundant grey tone name vector accordingly","code":"fixed_tx_biotypes <- c(   \"gene\", \"protein_coding\", \"retained_intron\",   \"processed_transcript\", \"nonsense_mediated_decay\",   \"lncRNA\", \"processed_pseudogene\",   \"transcribed_unprocessed_pseudogene\",   \"unprocessed_pseudogene\", \"non_stop_decay\", \"transcribed_unitary_pseudogene\",   \"pseudogene\", \"unitary_pseudogene\" )  tx_type_color_names <- c(   \"#fb8072\", \"#a6d854\", \"#8da0cb\", \"#fc8d62\",   \"#66c2a5\", \"#e78ac3\", \"#ffd92f\", \"#e5c494\",   \"#d9d9d9\", \"#d9d9d9\", \"#d9d9d9\", \"#ffffb3\",   \"#d9d9d9\" )  names(tx_type_color_names) <- fixed_tx_biotypes  tx_type_color_names ##                               gene                     protein_coding  ##                          \"#fb8072\"                          \"#a6d854\"  ##                    retained_intron               processed_transcript  ##                          \"#8da0cb\"                          \"#fc8d62\"  ##            nonsense_mediated_decay                             lncRNA  ##                          \"#66c2a5\"                          \"#e78ac3\"  ##               processed_pseudogene transcribed_unprocessed_pseudogene  ##                          \"#ffd92f\"                          \"#e5c494\"  ##             unprocessed_pseudogene                     non_stop_decay  ##                          \"#d9d9d9\"                          \"#d9d9d9\"  ##     transcribed_unitary_pseudogene                         pseudogene  ##                          \"#d9d9d9\"                          \"#ffffb3\"  ##                 unitary_pseudogene  ##                          \"#d9d9d9\""},{"path":"/articles/intro_isoformic.html","id":"log2fc-plot","dir":"Articles","previous_headings":"","what":"Log2FC Plot","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"simplest first plot tutorial log2FC plot, plot compare foldchange case vs control gene, transcripts adding significance information. make combined version DEG table DET table using function join_DEG_DET. Now just use plotLog2FC gene like. function also works well small vector gene_names.","code":"DEG_DET_table <- join_DEG_DET(PE1_DEGs, PE1_DETs_final, 1, 0.05) head(DEG_DET_table) ## # A tibble: 6 × 9 ##   id             log2FC pvalue qvalue name  transcript_type gene_name abs_log2FC ##   <chr>           <dbl>  <dbl>  <dbl> <chr> <chr>           <chr>          <dbl> ## 1 ENSG00000000… -0.320  0.0485  0.125 TSPA… gene            TSPAN6        0.320  ## 2 ENSG00000000…  0.381  0.107   0.222 TNMD  gene            TNMD          0.381  ## 3 ENSG00000000… -0.0693 0.260   0.417 DPM1  gene            DPM1          0.0693 ## 4 ENSG00000000…  0.107  0.386   0.547 SCYL3 gene            SCYL3         0.107  ## 5 ENSG00000000…  0.162  0.229   0.380 C1or… gene            C1orf112      0.162  ## 6 ENSG00000000… -0.162  0.160   0.296 FGR   gene            FGR           0.162  ## # ℹ 1 more variable: significance <chr> plot_log2FC(DEG_DET_table, \"RBPJ\") # Work here to look better? or just remove for now # the best would be a loop that goes over each one of a list and # plots them in a folder the default could be the DET not deg table plot_obj <- plot_log2FC(DEG_DET_table, c(\"RBPJ\", \"EGFR\", \"PNCK\")) library(ggplot2) plot_obj +   theme_classic() +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))"},{"path":"/articles/intro_isoformic.html","id":"profile-plot","dir":"Articles","previous_headings":"","what":"Profile Plot","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Another good quantifiable way visualize switch using Transcript per Million Count transcript, compared gene case control conditions. use profile plot one size plots values TPM case conditions value TPM control conditions.","code":"DEG_DET_table |>   filter(!transcript_type %in% \"gene\") ## # A tibble: 70,870 × 9 ##    id          log2FC  pvalue  qvalue name  transcript_type gene_name abs_log2FC ##    <chr>        <dbl>   <dbl>   <dbl> <chr> <chr>           <chr>          <dbl> ##  1 ENST000006…  0.640 3.11e-1 5.40e-1 ISG1… protein_coding  ISG15          0.640 ##  2 ENST000003…  0.534 1.29e-2 7.07e-2 AGRN… protein_coding  AGRN           0.534 ##  3 ENST000004… -0.530 5.81e-2 1.91e-1 AGRN… retained_intron AGRN           0.530 ##  4 ENST000004…  1.83  1.66e-5 6.81e-4 RNF2… protein_coding  RNF223         1.83  ##  5 ENST000004…  0.415 2.20e-1 4.40e-1 TNFR… retained_intron TNFRSF4        0.415 ##  6 ENST000003…  0.374 2.27e-1 4.48e-1 TNFR… protein_coding  TNFRSF4        0.374 ##  7 ENST000003…  0.479 6.70e-2 2.09e-1 TAS1… protein_coding  TAS1R3         0.479 ##  8 ENST000003…  0.217 3.82e-1 6.06e-1 DVL1… protein_coding  DVL1           0.217 ##  9 ENST000003…  0.570 8.12e-2 2.37e-1 DVL1… protein_coding  DVL1           0.570 ## 10 ENST000006…  1.91  4.34e-1 6.52e-1 DVL1… protein_coding  DVL1           1.91  ## # ℹ 70,860 more rows ## # ℹ 1 more variable: significance <chr> unique(DEG_DET_table$transcript_type) ##  [1] \"gene\"                               \"protein_coding\"                     ##  [3] \"retained_intron\"                    \"processed_transcript\"               ##  [5] \"lncRNA\"                             \"nonsense_mediated_decay\"            ##  [7] \"processed_pseudogene\"               \"unprocessed_pseudogene\"             ##  [9] \"transcribed_unprocessed_pseudogene\" \"non_stop_decay\"                     ## [11] \"transcribed_unitary_pseudogene\"     \"pseudogene\"                         ## [13] \"unitary_pseudogene\" profile_data_df <- prepare_profile_data(   txi_transcript = PE1_counts,   tx_to_gene = tx_to_gene,   sample_metadata = sample_table,   de_result_gene = PE1_DEGs,   de_result_transcript = PE1_DETs,   var = \"condition\",   var_levels = c(\"control\", \"treatment\") ) # # # Create output directory if don't exist yet # path_to_save <- \"results/profile_plot\" # fs::dir_create(path_to_save)  profile_plot <- plot_tx_expr(   genes_to_plot = \"RBPJ\",   profile_data = profile_data_df ) profile_plot # profile_data_df  # profile_plot <- plot_tx_expr( # genes_to_plot = \"ILR2A\", # profile_data = profile_data_df # ) # profile_data_df |> # filter(genename == \"ILR2A\")"},{"path":"/articles/intro_isoformic.html","id":"functional-transcript-enrichment","dir":"Articles","previous_headings":"","what":"Functional Transcript Enrichment","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"One biggest caveats transcript level analysis many times hard extract biologically relevant information much data. Instead final table 900 genes get table 3.000 transcripts differential expression cut. next step gene-level DE functional enrichment assigning genes metabolic pathways may regulating. Unfortunately comprehensive datasets pathways transcripts may regulating gene level analyses normally loses difference transcripts can produce proteins (protein_coding) canonical translation pathways . solve problem developed method expanding known .gmts transcript information separately enrich selected category transcript. alternative spliced isoforms code canonical proteins abundant classified Nonsense-mediated decay, premature stop codon subject targeted degradation Processed transcript, , reason, posses complete Open Reading Frame. Inside processed transcript category one highest count Retained introns, sequences retain intronic portion processing. three categories abundant transcripts arise alternative splicing protein coding gene three main focus enrichment graphs. first choose .gmt used enrichment, case loaded human reactome gene list MSigDB called c2. gene list GMT format works . gmt loaded fgsea format lists biological process. Visualize table running run run_enrichment function needs DETs final table, genesetlist pvalue cutoff used. generate table enrichment extra column “experiment”. experiment column five possible values: Protein-coding: enrichment associated transcripts categorized protein coding. Unproductive: term used moving forward combine three categories alternative spliced isoforms transcribed coding genes. authors aware biologically term deprecated since kind transcripts can produce peptides alternative translation pathways. unproductive read virtually incapable producing protein associated gene. interpretation, made category find pathways regulated coding data, unproductive transcripts. also added three categories individual alternative spliced types pathways regulated specific analysis. deep transcriptome individual enrichment categories can also lead promissing insights. Plotting enrichment used LollipopPlot plot enrichments side side size pathway radius circles transparency pathway passes desired cutoff. First plot Protein_coding versus Unproductive extringent NES cutoff.  now specific unproductive subtypes","code":"path_package(\"isoformic\", \"extdata\", \"c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt\") ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/temp_libpathd65248a5d703/isoformic/extdata/c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt genesets_list <- fgsea::gmtPathways(   gmt.file = path_package(\"isoformic\", \"extdata\", \"c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt\") )  head(str(genesets_list[1:5])) ## List of 5 ##  $ REACTOME_INTERLEUKIN_6_SIGNALING        : chr [1:11] \"JAK2\" \"TYK2\" \"CBL\" \"STAT1\" ... ##  $ REACTOME_APOPTOSIS                      : chr [1:179] \"BAD\" \"CFLAR\" \"PSMB1\" \"PSMC4\" ... ##  $ REACTOME_HEMOSTASIS                     : chr [1:678] \"FGR\" \"CD99\" \"TFPI\" \"KDM1A\" ... ##  $ REACTOME_INTRINSIC_PATHWAY_FOR_APOPTOSIS: chr [1:55] \"BAD\" \"BID\" \"BAK1\" \"CASP8\" ... ##  $ REACTOME_MAPK3_ERK1_ACTIVATION          : chr [1:10] \"JAK2\" \"MAPK3\" \"TYK2\" \"IL6ST\" ... ## NULL head(genesets_list[[1]]) ## [1] \"JAK2\"  \"TYK2\"  \"CBL\"   \"STAT1\" \"IL6ST\" \"IL6\" head(PE1_DETs_final) ## # A tibble: 6 × 8 ##   transcript_id   log2FC  pvalue  qvalue transcript_name transcript_type DEG_sig ##   <chr>            <dbl>   <dbl>   <dbl> <chr>           <chr>           <chr>   ## 1 ENST0000064952…  0.640 3.11e-1 5.40e-1 ISG15-203       protein_coding  YES     ## 2 ENST0000037937…  0.534 1.29e-2 7.07e-2 AGRN-201        protein_coding  YES     ## 3 ENST0000046111… -0.530 5.81e-2 1.91e-1 AGRN-202        retained_intron YES     ## 4 ENST0000045346…  1.83  1.66e-5 6.81e-4 RNF223-201      protein_coding  YES     ## 5 ENST0000049786…  0.415 2.20e-1 4.40e-1 TNFRSF4-203     retained_intron YES     ## 6 ENST0000037923…  0.374 2.27e-1 4.48e-1 TNFRSF4-201     protein_coding  YES     ## # ℹ 1 more variable: gene_name <chr> enrichment_df <- run_enrichment(   det_df = PE1_DETs_final,   genesets_list = genesets_list,   pval_cutoff = 0.05 ) head(enrichment_df) ## # A tibble: 6 × 9 ##   pathway         pval     padj log2err    ES   NES  size leadingEdge experiment ##   <chr>          <dbl>    <dbl>   <dbl> <dbl> <dbl> <int> <list>      <chr>      ## 1 REACTOMEMA… 1.86e- 2 3.33e- 2   0.352 0.712  1.64    11 <chr [8]>   protein_c… ## 2 REACTOME_A… 5.70e- 3 1.23e- 2   0.407 0.878  1.62     5 <chr [3]>   protein_c… ## 3 REACTOME_A… 1.59e-13 3.25e-12   0.944 0.695  2.41    95 <chr [40]>  protein_c… ## 4 REACTOME_A… 3.28e-10 3.92e- 9   0.814 0.690  2.29    72 <chr [26]>  protein_c… ## 5 REACTOME_A… 7.00e- 4 1.98e- 3   0.477 0.722  1.86    20 <chr [8]>   protein_c… ## 6 REACTOME_A… 4.54e- 2 7.25e- 2   0.277 0.603  1.52    17 <chr [11]>  protein_c… head(names(genesets_list)) ## [1] \"REACTOME_INTERLEUKIN_6_SIGNALING\"                                                            ## [2] \"REACTOME_APOPTOSIS\"                                                                          ## [3] \"REACTOME_HEMOSTASIS\"                                                                         ## [4] \"REACTOME_INTRINSIC_PATHWAY_FOR_APOPTOSIS\"                                                    ## [5] \"REACTOME_MAPK3_ERK1_ACTIVATION\"                                                              ## [6] \"REACTOME_TRANSLESION_SYNTHESIS_BY_Y_FAMILY_DNA_POLYMERASES_BYPASSES_LESIONS_ON_DNA_TEMPLATE\" unique(enrichment_df$experiment) ## [1] \"protein_coding\"          \"unproductive\"            ## [3] \"retained_intron\"         \"processed_transcript\"    ## [5] \"nonsense_mediated_decay\" enrichment_df |>   dplyr::filter((experiment %in% c(\"protein_coding\", \"unproductive\")) & (abs(NES) > 2)) |>   dplyr::arrange(padj) |>   dplyr::slice_head(n = 30) |>   ggplot2::ggplot(ggplot2::aes(pathway, experiment)) +   ggplot2::geom_point(ggplot2::aes(col = NES, size = size)) +   ggplot2::coord_flip() +   ggplot2::theme_minimal() +   viridis::scale_color_viridis(option = \"mako\", direction = -1) enrichment_df |>   dplyr::filter(!experiment %in% c(\"protein_coding\", \"unproductive\") & abs(NES) > 1.5) |>   dplyr::arrange(padj) |>   dplyr::slice_head(n = 20) |>   ggplot2::ggplot(ggplot2::aes(pathway, experiment)) +   ggplot2::geom_point(ggplot2::aes(col = NES, size = size)) +   ggplot2::coord_flip() +   ggplot2::theme_minimal() +   viridis::scale_color_viridis(option = \"magma\", direction = -1)"},{"path":"/articles/intro_isoformic.html","id":"genomic-context-plot","dir":"Articles","previous_headings":"","what":"Genomic Context Plot","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"One main issues arrived start isoform level analysis, easy direct way visualize transcript-types compared one another, using transcript-type transcript per million information. alignment plots today use outputs .bam/.sam files align directly genome making us lose transcript-type information increasing considerably processing time analysis size files time takes re-align. solve problem used direct approach allows us visualize difference introns exons transcript, types transcripts much counted according pseudo-alignment; turn loses read alignment count proportion. alignment count unfortunately requires running alignment softwares dealing .sam .bam files covered tutorial. called plot genomic context plot takes inspiration way Ensembl shows transcripts genome browser. specific plot requires GFF file can also downloaded GENCODE included file path next function. GFF file needs downloaded accurate version transcriptome, case v34. table used plotting Plotting","code":"exon_df <- prepare_exon_annotation(   gene_name = \"RBPJ\",   file_path = \"data-raw/gencode.v34.chr_patch_hapl_scaff.annotation.gff3.gz\",   file_type = \"gff\" ) exon_df ## # A tibble: 202 × 5 ##    exon_left exon_right strand tx_id             tx_name ##    <chr>     <chr>      <chr>  <chr>             <chr>   ##  1 26163455  26163614   +      ENST00000512351.5 RBPJ    ##  2 26362446  26362628   +      ENST00000512351.5 RBPJ    ##  3 26386353  26386391   +      ENST00000512351.5 RBPJ    ##  4 26406175  26406270   +      ENST00000512351.5 RBPJ    ##  5 26415475  26415605   +      ENST00000512351.5 RBPJ    ##  6 26272607  26272761   +      ENST00000510778.6 RBPJ    ##  7 26386353  26386391   +      ENST00000510778.6 RBPJ    ##  8 26406175  26406270   +      ENST00000510778.6 RBPJ    ##  9 26415475  26415640   +      ENST00000510778.6 RBPJ    ## 10 26420551  26420725   +      ENST00000510778.6 RBPJ    ## # ℹ 192 more rows exon_df |>   plot_tx_context()"},{"path":"/articles/intro_isoformic.html","id":"protein-coding-example","dir":"Articles","previous_headings":"Genomic Context Plot","what":"Protein coding example","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Testing XIST EGFR genes dual context.","code":"exon_df <- prepare_exon_annotation(   gene_name = \"EGFR\",   file_path = \"data-raw/gencode.v34.chr_patch_hapl_scaff.annotation.gff3.gz\",   file_type = \"gff\" ) exon_df |>   plot_tx_context() dual_exon_df <- prepare_exon_annotation(   gene_name = c(\"XIST\", \"EGFR\"),   file_path = \"data-raw/gencode.v34.chr_patch_hapl_scaff.annotation.gff3.gz\",   file_type = \"gff\" ) dual_exon_df |>   plot_tx_context() dual_exon_df |>   dplyr::filter(tx_id %in% c(\"ENST00000602495.1\", \"ENST00000602863.2\")) |>   plot_tx_context()"},{"path":[]},{"path":"/articles/isoformic_index.html","id":"table-of-content","dir":"Articles","previous_headings":"","what":"Table of content","title":"Isoformic - Vignettes Index","text":"Introduction End--end workflow Reference Annotation Pre-processing reads","code":""},{"path":"/articles/isoformic_intro.html","id":"the-isoformic-method","dir":"Articles","previous_headings":"","what":"The Isoformic method","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Welcome isoformic, workflow isoform-level biological interpretation transcriptomic data.","code":""},{"path":"/articles/isoformic_intro.html","id":"information","dir":"Articles","previous_headings":"The Isoformic method","what":"Information","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"data used examples extracted paper: “Landscape Dysregulated Placental RNA Editing Associated Preeclampsia” analyzed generated RNA-Seq datasets preeclamptic control placentas. dataset chosen due many biological replicates high sequencing depth. tutorial encompass X different steps divided X unities type analysis want perform.","code":""},{"path":"/articles/isoformic_intro.html","id":"dependencies","dir":"Articles","previous_headings":"The Isoformic method","what":"Dependencies","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"NOTE: 2024-06-08 version Workflow described vignette maintained. installing v0.0.1 package run workflow use: Load dependency packages","code":"if (requireNamespace(remotes, quietly = TRUE)) {   remotes::install_github(\"luciorq/isoformic@v0.0.1\") } library(isoformic) library(fs) library(readr) library(dplyr) library(tidyr) library(stringr) # library(SummarizedExperiment) # library(tximeta) # library(fishpond)"},{"path":[]},{"path":"/articles/isoformic_intro.html","id":"initial-considerations","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data","what":"Initial Considerations","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"highly recommend use Salmon transcript-level abundance estimation swish method implemented fishpond R package isoform-level differential expression. GENCODE project offers good annotation isoforms human mouse genomes, including isoforms non-coding genes. Using sources annotation can render completely different results following analysis.","code":""},{"path":"/articles/isoformic_intro.html","id":"part-1-data-input","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data","what":"Part 1: Data input","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"version need two essential input two optional inputs. Essential input 1: transcript differential expression table. table can outputted kind differential expression software use needs contain 1) information Transcript name Ensembl Transcript ID per line 2) log2FoldChange information column named “log2FoldChange”. 3) p-value information column named “pvalue”. columns table used main analysis. DET table UNFILTERED version table. Example: Essential input 2: FASTA file GENCODE corresponds fasta used transcriptome alignment. need version since use names GENCODE version mergings. annotation used also need GENCODE since posses transcript_type column used information well. wish CAN provide information external source GENCODE, need table least three columns: 1)transcript_name column needs match gene names DET table TPM table, 2) gene-name column tell gene transcripts belong 3) transcript_type column. table also use transcript names GENCODE column stating transcript biotype also got GENCODE annotation. statistics can ‘pvalue’, ‘svalue’ ‘qvalue’ ‘log2FoldChange’ case control conditions also needed plots. Optional inputs: 1) Transcript per million (TPM) table matching transcripts differential expression table 2) GFF3 file transcriptome version corresponds FASTA 3) table differentially expressed genes data also use comparison. differential expression table can used pipeline authors, multiple testing, reached conclusion swish implementation differential transcript expression analysis using inferential replicate counts Salmon one performs best medium high depth transcriptome libraries looking number transcripts significant values. well annotated transcriptomes output results tests mentioned done using human data. Isoformic makes available example files can used model formatting necessary files running workflow. files can found following path. files available can seen : load table points libraries represent cases (treatment) controls. library, cases pregnant woman Preeclampsia controls matched pregnant without Preeclampsia.","code":"path_package(\"isoformic\") ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic PE1_DETs <- read_csv(path_package(\"isoformic\", \"extdata\", \"DETs_fixed.csv\")) head(PE1_DETs) ## # A tibble: 6 × 4 ##   transcript_id      log2FC  pvalue qvalue ##   <chr>               <dbl>   <dbl>  <dbl> ## 1 ENST00000456328.2 -0.692  0.0199  0.0940 ## 2 ENST00000488147.1  0.0731 0.652   0.812  ## 3 ENST00000466430.5 -0.146  0.364   0.590  ## 4 ENST00000442987.3 -0.183  0.0841  0.242  ## 5 ENST00000494149.2 -0.728  0.00599 0.0420 ## 6 ENST00000595919.1 -0.0789 0.951   0.977 path_package(\"isoformic\", \"extdata\") ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic/extdata path_package(\"isoformic\", \"extdata\") |>   dir_ls() ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic/extdata/DEGs_PE_fixed2.csv ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic/extdata/DETs_fixed.csv ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic/extdata/PE_1_DETs.csv ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic/extdata/PE_1_counts.csv ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic/extdata/c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic/extdata/hsapiens_REAC_subset.gmt ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic/extdata/isoformic-logo.png PE1_DETs <- path_package(\"isoformic\", \"extdata\", \"DETs_fixed.csv\") |>   read_csv() PE1_DEGs <- path_package(\"isoformic\", \"extdata\", \"DEGs_PE_fixed2.csv\") |>   read_csv() PE1_counts <- path_package(\"isoformic\", \"extdata\", \"PE_1_counts.csv\") |>   read_csv() |>   dplyr::rename(transcript_id = ...1) sample_table <- data.frame(   samples = colnames(PE1_counts)[2:ncol(PE1_counts)],   condition = c(rep(\"treatment\", 8), rep(\"control\", ncol(PE1_counts) - 9)) ) head(sample_table) ##       samples condition ## 1 SRR11498039 treatment ## 2 SRR11498040 treatment ## 3 SRR11498041 treatment ## 4 SRR11498042 treatment ## 5 SRR11498043 treatment ## 6 SRR11498044 treatment"},{"path":"/articles/isoformic_intro.html","id":"download-reference-files","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data > Part 1: Data input","what":"Download reference files","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"references used project obtained GENCODE Project version 34 Human genome annotation. annotation file GFF3 format obtained https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_34/gencode.v34.chr_patch_hapl_scaff.annotation.gff3.gz. step may take depending speed internet connection","code":"download_reference(version = \"34\", file_type = \"fasta\") download_reference(version = \"34\", file_type = \"gtf\") # download_reference(version = \"34\", file_type = \"gff\")"},{"path":"/articles/isoformic_intro.html","id":"part-2-transcript-to-gene-and-gene-to-transcript-reference-tables","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data","what":"Part 2: Transcript to Gene and Gene to transcript reference tables","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Using FASTA file GENCODE construct transcript per gene dictionary table add information main DEG, DET TPM table. step depend lot names columns tables Vignette decided change names keep consistency. input used FASTA file containing transcript sequences annotation information downloaded GENCODE website specific version used alignment. case GENCODE v34. header shows imported table still weird tidy, pass make_tx_to_gene function make tidy ready use. Now tx_to_gene table 6 columns order: Ensembl transcript id, Ensembl gene id, Havanna gene id, Havanna transcript id, transcript name, gene name, entrez gene number transcript type. DEG, DET TPM table need Ensembl gene id, Gene name transcript type information can convert tables transcript_name add type information gene DE DET table. Select columns gene id gene name info First add gene_name information DEG table Now transcript name TPM table DET table main table analysis.","code":"fasta_path <- \"data-raw/gencode.v34.transcripts.fa.gz\" read_lines(fasta_path, n_max = 5) ## [1] \">ENST00000456328.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000362751.1|DDX11L1-202|DDX11L1|1657|processed_transcript|\" ## [2] \"GTTAACTTGCCGTCAGCCTTTTCTTTGACCTCTTCTTTCTGTTCATGTGTATTTGCTGTC\"                                                                  ## [3] \"TCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGA\"                                                                  ## [4] \"TGCTGTGGTCTTCATCTGCAGGTGTCTGACTTCCAGCAACTGCTGGCCTGTGCCAGGGTG\"                                                                  ## [5] \"CAAGCTGAGCACTGGAGTGGAGTTTTCCTGTGGAGAGGAGCCATGCCTAGAGTGGGATGG\" tx_to_gene <- make_tx_to_gene(   file_path = fasta_path,   file_type = \"fasta\" ) head(tx_to_gene) ## # A tibble: 6 × 8 ##   transcript_id    gene_id havanna_gene_id havanna_transcript_id transcript_name ##   <chr>            <chr>   <chr>           <chr>                 <chr>           ## 1 ENST00000456328… ENSG00… OTTHUMG0000000… OTTHUMT00000362751.1  DDX11L1-202     ## 2 ENST00000450305… ENSG00… OTTHUMG0000000… OTTHUMT00000002844.2  DDX11L1-201     ## 3 ENST00000488147… ENSG00… OTTHUMG0000000… OTTHUMT00000002839.1  WASH7P-201      ## 4 ENST00000619216… ENSG00… -               -                     MIR6859-1-201   ## 5 ENST00000473358… ENSG00… OTTHUMG0000000… OTTHUMT00000002840.1  MIR1302-2HG-202 ## 6 ENST00000469289… ENSG00… OTTHUMG0000000… OTTHUMT00000002841.2  MIR1302-2HG-201 ## # ℹ 3 more variables: gene_name <chr>, entrez_id <chr>, transcript_type <chr> tx_to_gene <- tx_to_gene |>   dplyr::select(     transcript_id, gene_id,     transcript_name, gene_name,     transcript_type   ) gene_join <- tx_to_gene |>   dplyr::select(gene_id, gene_name) |>   distinct() PE1_DEGs <- PE1_DEGs |>   left_join(gene_join, by = \"gene_id\") tpm_join <- tx_to_gene |>   dplyr::select(transcript_id, transcript_name) |>   distinct() PE1_counts <- PE1_counts |>   left_join(tpm_join, by = c(\"transcript_id\"))"},{"path":"/articles/isoformic_intro.html","id":"part-3-constructing-the-main-table","dir":"Articles","previous_headings":"The Isoformic method > Setting up the data","what":"Part 3: Constructing the main table","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Gene-level information input us categorical values added DET table. detail: need now transcript’s gene (1) pass gene-level expression cutoff values (2) type transcript belongs . multiple types Ensembl library definitions superpose one another, ones analyzed can seen figure  First add transcript name type information DET table gene expression level convert DEG table cutting get genes present DE exclude possible noise. used cutoffs absolute log2FC higher one pvalue lower 0.05 first filter DEG table significant ones add column main DET table using isDEGsig function. now tables need graphs analyses. One detail DET final table now allows us see genes whose transcripts differentially expressed genes simple dplyr filter. table represent cases characterized isoform switches, two transcripts gene expressed opposite directions makes total expression gene significant either -regulated.","code":"knitr::include_graphics(\"https://i.imgur.com/UWoAr0k.png\") transcript_joined <- tx_to_gene |>   dplyr::select(transcript_id, transcript_name, transcript_type) |>   distinct() PE1_DETs <- PE1_DETs |>   left_join(transcript_joined, by = \"transcript_id\") PE1_DEGs_new_names_sig <- PE1_DEGs |>   filter(abs(log2FC) >= 1) |>   filter(pvalue <= 0.05) |>   dplyr::select(gene_name) |>   drop_na() DEGs_sig_joined <- PE1_DEGs_new_names_sig |>   left_join(tx_to_gene, by = \"gene_name\") transcript_gene_join <- tx_to_gene |>   dplyr::select(transcript_name, gene_name) |>   distinct() PE1_DETs_final <- is_deg_sig(DEGs_sig_joined$transcript_name, PE1_DETs) PE1_DETs_final <- PE1_DETs_final |>   left_join(transcript_gene_join, by = \"transcript_name\") DETs_not_DEGs <- PE1_DETs_final |>   filter(pvalue < 0.05, abs(log2FC) > 1, DEG_sig == \"NO\")"},{"path":"/articles/isoformic_intro.html","id":"colors","dir":"Articles","previous_headings":"","what":"Colors","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"start plotting define general set colors used entire pipeline associated certain type transcript. colored abundant types separately less abundant grey tone name vector accordingly","code":"fixed_tx_biotypes <- c(   \"gene\", \"protein_coding\", \"retained_intron\",   \"processed_transcript\", \"nonsense_mediated_decay\",   \"lncRNA\", \"processed_pseudogene\",   \"transcribed_unprocessed_pseudogene\",   \"unprocessed_pseudogene\", \"non_stop_decay\", \"transcribed_unitary_pseudogene\",   \"pseudogene\", \"unitary_pseudogene\" )  tx_type_color_names <- c(   \"#fb8072\", \"#a6d854\", \"#8da0cb\", \"#fc8d62\",   \"#66c2a5\", \"#e78ac3\", \"#ffd92f\", \"#e5c494\",   \"#d9d9d9\", \"#d9d9d9\", \"#d9d9d9\", \"#ffffb3\",   \"#d9d9d9\" )  names(tx_type_color_names) <- fixed_tx_biotypes  tx_type_color_names ##                               gene                     protein_coding  ##                          \"#fb8072\"                          \"#a6d854\"  ##                    retained_intron               processed_transcript  ##                          \"#8da0cb\"                          \"#fc8d62\"  ##            nonsense_mediated_decay                             lncRNA  ##                          \"#66c2a5\"                          \"#e78ac3\"  ##               processed_pseudogene transcribed_unprocessed_pseudogene  ##                          \"#ffd92f\"                          \"#e5c494\"  ##             unprocessed_pseudogene                     non_stop_decay  ##                          \"#d9d9d9\"                          \"#d9d9d9\"  ##     transcribed_unitary_pseudogene                         pseudogene  ##                          \"#d9d9d9\"                          \"#ffffb3\"  ##                 unitary_pseudogene  ##                          \"#d9d9d9\""},{"path":"/articles/isoformic_intro.html","id":"log2fc-plot","dir":"Articles","previous_headings":"","what":"Log2FC Plot","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"simplest first plot tutorial log2FC plot, plot compare foldchange case vs control gene, transcripts adding significance information. make combined version DEG table DET table using function join_DEG_DET. Now just use plotLog2FC gene like. function also works well small vector gene_names.","code":"DEG_DET_table <- join_DEG_DET(PE1_DEGs, PE1_DETs_final, 1, 0.05) head(DEG_DET_table) ## # A tibble: 6 × 9 ##   id             log2FC pvalue qvalue name  transcript_type gene_name abs_log2FC ##   <chr>           <dbl>  <dbl>  <dbl> <chr> <chr>           <chr>          <dbl> ## 1 ENSG00000000… -0.320  0.0485  0.125 TSPA… gene            TSPAN6        0.320  ## 2 ENSG00000000…  0.381  0.107   0.222 TNMD  gene            TNMD          0.381  ## 3 ENSG00000000… -0.0693 0.260   0.417 DPM1  gene            DPM1          0.0693 ## 4 ENSG00000000…  0.107  0.386   0.547 SCYL3 gene            SCYL3         0.107  ## 5 ENSG00000000…  0.162  0.229   0.380 C1or… gene            C1orf112      0.162  ## 6 ENSG00000000… -0.162  0.160   0.296 FGR   gene            FGR           0.162  ## # ℹ 1 more variable: significance <chr> plot_log2FC(DEG_DET_table, \"RBPJ\") # Work here to look better? or just remove for now # the best would be a loop that goes over each one of a list and # plots them in a folder the default could be the DET not deg table plot_obj <- plot_log2FC(DEG_DET_table, c(\"RBPJ\", \"EGFR\", \"PNCK\")) library(ggplot2) plot_obj +   theme_classic() +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))"},{"path":"/articles/isoformic_intro.html","id":"profile-plot","dir":"Articles","previous_headings":"","what":"Profile Plot","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Another good quantifiable way visualize switch using Transcript per Million Count transcript, compared gene case control conditions. use profile plot one size plots values TPM case conditions value TPM control conditions.","code":"DEG_DET_table |>   filter(!transcript_type %in% \"gene\") ## # A tibble: 70,870 × 9 ##    id          log2FC  pvalue  qvalue name  transcript_type gene_name abs_log2FC ##    <chr>        <dbl>   <dbl>   <dbl> <chr> <chr>           <chr>          <dbl> ##  1 ENST000006…  0.640 3.11e-1 5.40e-1 ISG1… protein_coding  ISG15          0.640 ##  2 ENST000003…  0.534 1.29e-2 7.07e-2 AGRN… protein_coding  AGRN           0.534 ##  3 ENST000004… -0.530 5.81e-2 1.91e-1 AGRN… retained_intron AGRN           0.530 ##  4 ENST000004…  1.83  1.66e-5 6.81e-4 RNF2… protein_coding  RNF223         1.83  ##  5 ENST000004…  0.415 2.20e-1 4.40e-1 TNFR… retained_intron TNFRSF4        0.415 ##  6 ENST000003…  0.374 2.27e-1 4.48e-1 TNFR… protein_coding  TNFRSF4        0.374 ##  7 ENST000003…  0.479 6.70e-2 2.09e-1 TAS1… protein_coding  TAS1R3         0.479 ##  8 ENST000003…  0.217 3.82e-1 6.06e-1 DVL1… protein_coding  DVL1           0.217 ##  9 ENST000003…  0.570 8.12e-2 2.37e-1 DVL1… protein_coding  DVL1           0.570 ## 10 ENST000006…  1.91  4.34e-1 6.52e-1 DVL1… protein_coding  DVL1           1.91  ## # ℹ 70,860 more rows ## # ℹ 1 more variable: significance <chr> unique(DEG_DET_table$transcript_type) ##  [1] \"gene\"                               \"protein_coding\"                     ##  [3] \"retained_intron\"                    \"processed_transcript\"               ##  [5] \"lncRNA\"                             \"nonsense_mediated_decay\"            ##  [7] \"processed_pseudogene\"               \"unprocessed_pseudogene\"             ##  [9] \"transcribed_unprocessed_pseudogene\" \"non_stop_decay\"                     ## [11] \"transcribed_unitary_pseudogene\"     \"pseudogene\"                         ## [13] \"unitary_pseudogene\" profile_data_df <- prepare_profile_data(   txi_transcript = PE1_counts,   tx_to_gene = tx_to_gene,   sample_metadata = sample_table,   de_result_gene = PE1_DEGs,   de_result_transcript = PE1_DETs,   var = \"condition\",   var_levels = c(\"control\", \"treatment\") ) # # # Create output directory if don't exist yet # path_to_save <- \"results/profile_plot\" # fs::dir_create(path_to_save)  profile_plot <- plot_tx_expr(   genes_to_plot = \"RBPJ\",   profile_data = profile_data_df ) profile_plot # profile_data_df  # profile_plot <- plot_tx_expr( # genes_to_plot = \"ILR2A\", # profile_data = profile_data_df # ) # profile_data_df |> # filter(genename == \"ILR2A\")"},{"path":"/articles/isoformic_intro.html","id":"functional-transcript-enrichment","dir":"Articles","previous_headings":"","what":"Functional Transcript Enrichment","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"One biggest caveats transcript level analysis many times hard extract biologically relevant information much data. Instead final table 900 genes get table 3.000 transcripts differential expression cut. next step gene-level DE functional enrichment assigning genes metabolic pathways may regulating. Unfortunately comprehensive datasets pathways transcripts may regulating gene level analyses normally loses difference transcripts can produce proteins (protein_coding) canonical translation pathways . solve problem developed method expanding known .gmts transcript information separately enrich selected category transcript. alternative spliced isoforms code canonical proteins abundant classified Nonsense-mediated decay, premature stop codon subject targeted degradation Processed transcript, , reason, posses complete Open Reading Frame. Inside processed transcript category one highest count Retained introns, sequences retain intronic portion processing. three categories abundant transcripts arise alternative splicing protein coding gene three main focus enrichment graphs. first choose .gmt used enrichment, case loaded human reactome gene list MSigDB called c2. gene list GMT format works . gmt loaded fgsea format lists biological process. Visualize table running run run_enrichment function needs DETs final table, genesetlist pvalue cutoff used. generate table enrichment extra column “experiment”. experiment column five possible values: Protein-coding: enrichment associated transcripts categorized protein coding. Unproductive: term used moving forward combine three categories alternative spliced isoforms transcribed coding genes. authors aware biologically term deprecated since kind transcripts can produce peptides alternative translation pathways. unproductive read virtually incapable producing protein associated gene. interpretation, made category find pathways regulated coding data, unproductive transcripts. also added three categories individual alternative spliced types pathways regulated specific analysis. deep transcriptome individual enrichment categories can also lead promissing insights. Plotting enrichment used LollipopPlot plot enrichments side side size pathway radius circles transparency pathway passes desired cutoff. First plot Protein_coding versus Unproductive extringent NES cutoff.  now specific unproductive subtypes","code":"fs::path_package(\"isoformic\", \"extdata\", \"c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt\") ## /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade/isoformic/extdata/c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt genesets_list <- fgsea::gmtPathways(   gmt.file = fs::path_package(\"isoformic\", \"extdata\", \"c2.cp.reactome.v2023.1.Hs.symbols.gmt.txt\") )  head(str(genesets_list[1:5])) ## List of 5 ##  $ REACTOME_INTERLEUKIN_6_SIGNALING        : chr [1:11] \"JAK2\" \"TYK2\" \"CBL\" \"STAT1\" ... ##  $ REACTOME_APOPTOSIS                      : chr [1:179] \"BAD\" \"CFLAR\" \"PSMB1\" \"PSMC4\" ... ##  $ REACTOME_HEMOSTASIS                     : chr [1:678] \"FGR\" \"CD99\" \"TFPI\" \"KDM1A\" ... ##  $ REACTOME_INTRINSIC_PATHWAY_FOR_APOPTOSIS: chr [1:55] \"BAD\" \"BID\" \"BAK1\" \"CASP8\" ... ##  $ REACTOME_MAPK3_ERK1_ACTIVATION          : chr [1:10] \"JAK2\" \"MAPK3\" \"TYK2\" \"IL6ST\" ... ## NULL head(genesets_list[[1]]) ## [1] \"JAK2\"  \"TYK2\"  \"CBL\"   \"STAT1\" \"IL6ST\" \"IL6\" head(PE1_DETs_final) ## # A tibble: 6 × 8 ##   transcript_id   log2FC  pvalue  qvalue transcript_name transcript_type DEG_sig ##   <chr>            <dbl>   <dbl>   <dbl> <chr>           <chr>           <chr>   ## 1 ENST0000064952…  0.640 3.11e-1 5.40e-1 ISG15-203       protein_coding  YES     ## 2 ENST0000037937…  0.534 1.29e-2 7.07e-2 AGRN-201        protein_coding  YES     ## 3 ENST0000046111… -0.530 5.81e-2 1.91e-1 AGRN-202        retained_intron YES     ## 4 ENST0000045346…  1.83  1.66e-5 6.81e-4 RNF223-201      protein_coding  YES     ## 5 ENST0000049786…  0.415 2.20e-1 4.40e-1 TNFRSF4-203     retained_intron YES     ## 6 ENST0000037923…  0.374 2.27e-1 4.48e-1 TNFRSF4-201     protein_coding  YES     ## # ℹ 1 more variable: gene_name <chr> enrichment_df <- run_enrichment(   det_df = PE1_DETs_final,   genesets_list = genesets_list,   pval_cutoff = 0.05 ) head(enrichment_df) ## # A tibble: 6 × 9 ##   pathway         pval     padj log2err    ES   NES  size leadingEdge experiment ##   <chr>          <dbl>    <dbl>   <dbl> <dbl> <dbl> <int> <list>      <chr>      ## 1 REACTOMEMA… 1.86e- 2 3.33e- 2   0.352 0.712  1.64    11 <chr [8]>   protein_c… ## 2 REACTOME_A… 5.70e- 3 1.23e- 2   0.407 0.878  1.62     5 <chr [3]>   protein_c… ## 3 REACTOME_A… 1.59e-13 3.25e-12   0.944 0.695  2.41    95 <chr [40]>  protein_c… ## 4 REACTOME_A… 3.28e-10 3.92e- 9   0.814 0.690  2.29    72 <chr [26]>  protein_c… ## 5 REACTOME_A… 7.00e- 4 1.98e- 3   0.477 0.722  1.86    20 <chr [8]>   protein_c… ## 6 REACTOME_A… 4.54e- 2 7.25e- 2   0.277 0.603  1.52    17 <chr [11]>  protein_c… head(names(genesets_list)) ## [1] \"REACTOME_INTERLEUKIN_6_SIGNALING\"                                                            ## [2] \"REACTOME_APOPTOSIS\"                                                                          ## [3] \"REACTOME_HEMOSTASIS\"                                                                         ## [4] \"REACTOME_INTRINSIC_PATHWAY_FOR_APOPTOSIS\"                                                    ## [5] \"REACTOME_MAPK3_ERK1_ACTIVATION\"                                                              ## [6] \"REACTOME_TRANSLESION_SYNTHESIS_BY_Y_FAMILY_DNA_POLYMERASES_BYPASSES_LESIONS_ON_DNA_TEMPLATE\" unique(enrichment_df$experiment) ## [1] \"protein_coding\"          \"unproductive\"            ## [3] \"retained_intron\"         \"processed_transcript\"    ## [5] \"nonsense_mediated_decay\" enrichment_df |>   dplyr::filter((experiment %in% c(\"protein_coding\", \"unproductive\")) & (abs(NES) > 2)) |>   dplyr::arrange(padj) |>   dplyr::slice_head(n = 30) |>   ggplot2::ggplot(ggplot2::aes(pathway, experiment)) +   ggplot2::geom_point(ggplot2::aes(col = NES, size = size)) +   ggplot2::coord_flip() +   ggplot2::theme_minimal() +   viridis::scale_color_viridis(option = \"mako\", direction = -1) enrichment_df |>   dplyr::filter(!experiment %in% c(\"protein_coding\", \"unproductive\") & abs(NES) > 1.5) |>   dplyr::arrange(padj) |>   dplyr::slice_head(n = 20) |>   ggplot2::ggplot(ggplot2::aes(pathway, experiment)) +   ggplot2::geom_point(ggplot2::aes(col = NES, size = size)) +   ggplot2::coord_flip() +   ggplot2::theme_minimal() +   viridis::scale_color_viridis(option = \"magma\", direction = -1)"},{"path":"/articles/isoformic_intro.html","id":"genomic-context-plot","dir":"Articles","previous_headings":"","what":"Genomic Context Plot","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"One main issues arrived start isoform level analysis, easy direct way visualize transcript-types compared one another, using transcript-type transcript per million information. alignment plots today use outputs .bam/.sam files align directly genome making us lose transcript-type information increasing considerably processing time analysis size files time takes re-align. solve problem used direct approach allows us visualize difference introns exons transcript, types transcripts much counted according pseudo-alignment; turn loses read alignment count proportion. alignment count unfortunately requires running alignment softwares dealing .sam .bam files covered tutorial. called plot genomic context plot takes inspiration way Ensembl shows transcripts genome browser. specific plot requires GFF file can also downloaded GENCODE included file path next function. GFF file needs downloaded accurate version transcriptome, case v34. table used plotting Plotting","code":"exon_df <- prepare_exon_annotation(   gene_name = \"RBPJ\",   file_path = \"data-raw/gencode.v34.chr_patch_hapl_scaff.annotation.gff3.gz\",   file_type = \"gff\" ) exon_df ## # A tibble: 202 × 5 ##    exon_left exon_right strand tx_id             tx_name ##    <chr>     <chr>      <chr>  <chr>             <chr>   ##  1 26163455  26163614   +      ENST00000512351.5 RBPJ    ##  2 26362446  26362628   +      ENST00000512351.5 RBPJ    ##  3 26386353  26386391   +      ENST00000512351.5 RBPJ    ##  4 26406175  26406270   +      ENST00000512351.5 RBPJ    ##  5 26415475  26415605   +      ENST00000512351.5 RBPJ    ##  6 26272607  26272761   +      ENST00000510778.6 RBPJ    ##  7 26386353  26386391   +      ENST00000510778.6 RBPJ    ##  8 26406175  26406270   +      ENST00000510778.6 RBPJ    ##  9 26415475  26415640   +      ENST00000510778.6 RBPJ    ## 10 26420551  26420725   +      ENST00000510778.6 RBPJ    ## # ℹ 192 more rows exon_df |>   plot_tx_context()"},{"path":"/articles/isoformic_intro.html","id":"protein-coding-example","dir":"Articles","previous_headings":"Genomic Context Plot","what":"Protein coding example","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"Testing XIST EGFR genes dual context.","code":"exon_df <- prepare_exon_annotation(   gene_name = \"EGFR\",   file_path = \"data-raw/gencode.v34.chr_patch_hapl_scaff.annotation.gff3.gz\",   file_type = \"gff\" ) exon_df |>   plot_tx_context() dual_exon_df <- prepare_exon_annotation(   gene_name = c(\"XIST\", \"EGFR\"),   file_path = \"data-raw/gencode.v34.chr_patch_hapl_scaff.annotation.gff3.gz\",   file_type = \"gff\" ) dual_exon_df |>   plot_tx_context() dual_exon_df |>   dplyr::filter(tx_id %in% c(\"ENST00000602495.1\", \"ENST00000602863.2\")) |>   plot_tx_context()"},{"path":"/articles/isoformic_intro.html","id":"session-information","dir":"Articles","previous_headings":"Genomic Context Plot","what":"Session Information","title":"Isoformic: Isoform-level biological interpretation of transcriptomic data","text":"","code":"sessioninfo::session_info() ## ─ Session info ─────────────────────────────────────────────────────────────── ##  setting  value ##  version  R version 4.4.0 (2024-04-24) ##  os       macOS Sonoma 14.1.2 ##  system   aarch64, darwin20 ##  ui       X11 ##  language en ##  collate  en_US.UTF-8 ##  ctype    en_US.UTF-8 ##  tz       America/New_York ##  date     2024-06-11 ##  pandoc   3.1.13 @ /opt/homebrew/bin/ (via rmarkdown) ##  ## ─ Packages ─────────────────────────────────────────────────────────────────── ##  package      * version    date (UTC) lib source ##  abind          1.4-5      2016-07-21 [2] RSPM ##  backports      1.5.0      2024-05-23 [2] RSPM ##  BiocParallel   1.38.0     2024-04-30 [2] Bioconduc~ ##  bit            4.0.5      2022-11-15 [2] RSPM ##  bit64          4.0.5      2020-08-30 [2] RSPM ##  broom          1.0.6      2024-05-17 [2] RSPM ##  bslib          0.7.0      2024-03-29 [2] RSPM ##  cachem         1.1.0      2024-05-16 [2] RSPM ##  car            3.1-2      2023-03-30 [2] RSPM ##  carData        3.0-5      2022-01-06 [2] RSPM ##  cli            3.6.2      2023-12-11 [2] RSPM ##  codetools      0.2-20     2024-03-31 [2] CRAN (R 4.4.0) ##  colorspace     2.1-0      2023-01-23 [2] RSPM ##  cowplot        1.1.3      2024-01-22 [2] RSPM ##  crayon         1.5.2      2022-09-29 [2] RSPM ##  data.table     1.15.4     2024-03-30 [2] RSPM ##  desc           1.4.3      2023-12-10 [2] RSPM ##  digest         0.6.35     2024-03-11 [2] RSPM ##  dplyr        * 1.1.4      2023-11-17 [2] RSPM ##  evaluate       0.23       2023-11-01 [2] RSPM ##  fansi          1.0.6      2023-12-08 [2] RSPM ##  farver         2.1.2      2024-05-13 [2] RSPM ##  fastmap        1.2.0      2024-05-15 [2] RSPM ##  fastmatch      1.1-4      2023-08-18 [2] RSPM ##  fgsea          1.30.0     2024-04-30 [2] bioc (@1.30.0) ##  forcats        1.0.0      2023-01-29 [2] RSPM ##  fs           * 1.6.4      2024-04-25 [2] RSPM ##  generics       0.1.3      2022-07-05 [2] RSPM ##  ggplot2      * 3.5.1      2024-04-23 [2] RSPM ##  ggpubr         0.6.0      2023-02-10 [2] RSPM ##  ggrepel        0.9.5      2024-01-10 [2] RSPM ##  ggsignif       0.6.4      2022-10-13 [2] RSPM ##  glue           1.7.0      2024-01-09 [2] RSPM ##  gridExtra      2.3        2017-09-09 [2] RSPM ##  gtable         0.3.5      2024-04-22 [2] RSPM ##  highr          0.11       2024-05-26 [2] RSPM ##  hms            1.1.3      2023-03-21 [2] RSPM ##  htmltools      0.5.8.1    2024-04-04 [2] RSPM ##  htmlwidgets    1.6.4      2023-12-06 [2] RSPM ##  isoformic    * 0.1.0.9006 2024-06-11 [1] local ##  jquerylib      0.1.4      2021-04-26 [2] RSPM ##  jsonlite       1.8.8      2023-12-04 [2] RSPM ##  knitr          1.47       2024-05-29 [2] CRAN (R 4.4.0) ##  labeling       0.4.3      2023-08-29 [2] RSPM ##  lattice        0.22-6     2024-03-20 [2] CRAN (R 4.4.0) ##  lifecycle      1.0.4      2023-11-07 [2] RSPM ##  magrittr       2.0.3      2022-03-30 [2] RSPM ##  Matrix         1.7-0      2024-03-22 [2] CRAN (R 4.4.0) ##  memoise        2.0.1      2021-11-26 [2] RSPM ##  munsell        0.5.1      2024-04-01 [2] RSPM ##  pillar         1.9.0      2023-03-22 [2] RSPM ##  pkgconfig      2.0.3      2019-09-22 [2] RSPM ##  pkgdown        2.0.9      2024-04-18 [2] RSPM ##  purrr          1.0.2      2023-08-10 [2] RSPM ##  R6             2.5.1      2021-08-19 [2] RSPM ##  ragg           1.3.2      2024-05-15 [2] RSPM ##  Rcpp           1.0.12     2024-01-09 [2] RSPM ##  readr        * 2.1.5      2024-01-10 [2] RSPM ##  rlang          1.1.3      2024-01-10 [2] RSPM ##  rmarkdown      2.27       2024-05-17 [2] RSPM ##  rstatix        0.7.2      2023-02-01 [2] RSPM ##  sass           0.4.9      2024-03-15 [2] RSPM ##  scales         1.3.0      2023-11-28 [2] RSPM ##  sessioninfo    1.2.2      2021-12-06 [2] RSPM ##  stringi        1.8.4      2024-05-06 [2] RSPM ##  stringr      * 1.5.1      2023-11-14 [2] RSPM ##  systemfonts    1.1.0      2024-05-15 [2] RSPM ##  textshaping    0.4.0      2024-05-24 [2] RSPM ##  tibble         3.2.1      2023-03-20 [2] RSPM ##  tidyr        * 1.3.1      2024-01-24 [2] RSPM ##  tidyselect     1.2.1      2024-03-11 [2] RSPM ##  tzdb           0.4.0      2023-05-12 [2] RSPM ##  utf8           1.2.4      2023-10-22 [2] RSPM ##  vctrs          0.6.5      2023-12-01 [2] RSPM ##  viridis        0.6.5      2024-01-29 [2] RSPM ##  viridisLite    0.4.2      2023-05-02 [2] RSPM ##  vroom          1.6.5      2023-12-05 [2] RSPM ##  withr          3.0.0      2024-01-16 [2] RSPM ##  xfun           0.44       2024-05-15 [2] RSPM ##  yaml           2.3.8      2023-12-11 [2] RSPM ##  ##  [1] /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade ##  [2] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library ##  ## ──────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"/articles/isoformic_pre_processing.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Isoformic - Pre-Processing","text":"highly opinionated example perform RNA-Seq pre-processing quantification focusing estimation o transcript abundance. workflow going use condathis R package. package allow run command line tools like Salmon (Patro et al. 2017). tools can run command line directly.","code":""},{"path":"/articles/isoformic_pre_processing.html","id":"note-for-macos-users","dir":"Articles","previous_headings":"Motivation","what":"Note for MacOS users","title":"Isoformic - Pre-Processing","text":"2024-06-09, Bioconda support Arm64 architecture Apple Silicon CPUs. One way bypassing using arguments platform = \"osx-64\" condathis::create_env(), create environment leveraging Rosetta 2 support. option can also added CLI command adding --platform osx-64 conda create command.","code":""},{"path":"/articles/isoformic_pre_processing.html","id":"note-for-windows-users","dir":"Articles","previous_headings":"Motivation","what":"Note for Windows users","title":"Isoformic - Pre-Processing","text":"2024-06-09 Bioconda support Windows native installations. Therefore vignette can run, using VM container. best approach running Windows Subsystem Linux, available.","code":""},{"path":"/articles/isoformic_pre_processing.html","id":"install-salmon-with-condathis","dir":"Articles","previous_headings":"","what":"Install Salmon with {condathis}","title":"Isoformic - Pre-Processing","text":"Check Salmon version: equivalent running CLI.","code":"# pak::pkg_install(\"local::~/projects/condathis\") if (!rlang::is_installed(\"condathis\")) {   pak::pkg_install(\"github::luciorq/condathis\") } library(\"condathis\") if (!condathis::env_exists(env_name = \"salmon-env\")) {   if (fs::dir_exists(fs::path(condathis::get_install_dir(),\"envs\", \"salmon-env\"))) {     fs::dir_delete(fs::path(condathis::get_install_dir(),\"envs\", \"salmon-env\"))   } } # Workaround for ARM CPU based MacOS if (isTRUE(condathis::get_sys_arch())) {   platform_var <- \"osx-64\" } else {   platform_var <- NULL }  condathis::create_env(   packages = \"salmon=1.10.3\",   env_name = \"salmon-env\",   method = \"native\",   platform = platform_var ) condathis::run(   \"salmon\", \"--version\",   env_name = \"salmon-env\" ) salmon 1.10.3 # if MacOS with arm64 CPU add `--platform osx-64` conda create -n salmon-env \\   -c bioconda -c conda-forge -c defaults \\   salmon;"},{"path":[]},{"path":"/articles/isoformic_pre_processing.html","id":"salmon-index","dir":"Articles","previous_headings":"Running Salmon with {condathis}","what":"Salmon index","title":"Isoformic - Pre-Processing","text":"CLI command. Salmon index command: Using condathis","code":"salmon index \\   --transcripts <TRANSCRIPTME_FASTA> \\   --index <SALMON_INDEX_DIR> \\   --kmerLen 15 \\   --threads 4 \\   --keepDuplicates; base_dir <- fs::path_temp(\"isoformic\") reference_version <- \"46\" download_reference(   version = reference_version,   reference = \"gencode\",   file_type = \"fasta\",   organism = \"human\",   output_path = base_dir ) txome_fasta_path <- fs::path(base_dir, paste0(\"gencode.v\", reference_version, \".transcripts.fa.gz\")) salmon_index_path <- fs::path(base_dir, paste0(\"salmon_index_gencode_v\", reference_version)) if (!fs::dir_exists(salmon_index_path) {   fs::dir_create(salmon_index_path) } num_threads <- 4 condathis::run(   \"salmon\", \"index\",   \"--transcripts\", txome_fasta_path,   \"--index\", salmon_index_path,   \"--kmerLen\", 15,   \"--threads\", num_threads,   \"--keepDuplicates\",   env_name = \"salmon-env\" )"},{"path":"/articles/isoformic_pre_processing.html","id":"salmon-quant","dir":"Articles","previous_headings":"Running Salmon with {condathis}","what":"Salmon Quant","title":"Isoformic - Pre-Processing","text":"Salmon quant command: Using condathis","code":"salmon \\   quant \\   --libType A \\   --index <SALMON_INDEX_PATH> \\   --mates1 <FASTQ_R1> \\   --mates2 <FASTQ_R2> \\   --output <SALMON_OUTPUT_PATH> \\   --threads {threads} \\   --softclip \\   --softclipOverhangs \\   --disableChainingHeuristic \\   --dumpEq \\   --dumpEqWeights \\   --posBias \\   --seqBias \\   --gcBias \\   --useVBOpt \\   --rangeFactorizationBins 8 \\   --thinningFactor 100 \\   --validateMappings \\   --writeMappings={output.quant_dir}/txome_align.sam \\   --minScoreFraction 0.65 \\   --numGibbsSamples 100 2>&1 | tee -a {log}; salmon_quant_path <- fs::path(base_dir, \"salmon_quant\") if (!fs::dir_exists(salmon_quant_path)) {   fs::dir_create(salmon_quant_path) } reads_path <- c(   fs::path(\"data-raw/sample_R1.fastq.gz\"),   fs::path(\"data-raw/sample_R2.fastq.gz\") )  condathis::run(   \"salmon\", \"quant\",   \"--libType\", \"A\",   \"--index\", salmon_index_path,   \"--mates1\", reads_path[1],   \"--mates2\", reads_path[2],   \"--output\", salmon_quant_path,   \"--numGibbsSamples\", 20,   \"--posBias\",   \"--seqBias\",   \"--gcBias\",   \"--threads\", num_threads,   \"--softclip\",   \"--softclipOverhangs\",   \"--disableChainingHeuristic\",   \"--dumpEq\",   \"--useVBOpt\",   \"--validateMappings\",   \"--minAssignedFrags\", 1,   \"--minScoreFraction\", \"0.65\",   env_name = \"salmon-env\" )"},{"path":"/articles/isoformic_pre_processing.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"Isoformic - Pre-Processing","text":"","code":"sessioninfo::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.4.0 (2024-04-24) #>  os       macOS Sonoma 14.1.2 #>  system   aarch64, darwin20 #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       America/New_York #>  date     2024-06-11 #>  pandoc   3.1.13 @ /opt/homebrew/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package     * version    date (UTC) lib source #>  bslib         0.7.0      2024-03-29 [2] RSPM #>  cachem        1.1.0      2024-05-16 [2] RSPM #>  cli           3.6.2      2023-12-11 [2] RSPM #>  desc          1.4.3      2023-12-10 [2] RSPM #>  digest        0.6.35     2024-03-11 [2] RSPM #>  evaluate      0.23       2023-11-01 [2] RSPM #>  fastmap       1.2.0      2024-05-15 [2] RSPM #>  fs            1.6.4      2024-04-25 [2] RSPM #>  htmltools     0.5.8.1    2024-04-04 [2] RSPM #>  htmlwidgets   1.6.4      2023-12-06 [2] RSPM #>  isoformic   * 0.1.0.9006 2024-06-11 [1] local #>  jquerylib     0.1.4      2021-04-26 [2] RSPM #>  jsonlite      1.8.8      2023-12-04 [2] RSPM #>  knitr         1.47       2024-05-29 [2] CRAN (R 4.4.0) #>  lifecycle     1.0.4      2023-11-07 [2] RSPM #>  magrittr      2.0.3      2022-03-30 [2] RSPM #>  memoise       2.0.1      2021-11-26 [2] RSPM #>  pkgdown       2.0.9      2024-04-18 [2] RSPM #>  purrr         1.0.2      2023-08-10 [2] RSPM #>  R6            2.5.1      2021-08-19 [2] RSPM #>  ragg          1.3.2      2024-05-15 [2] RSPM #>  rlang         1.1.3      2024-01-10 [2] RSPM #>  rmarkdown     2.27       2024-05-17 [2] RSPM #>  sass          0.4.9      2024-03-15 [2] RSPM #>  sessioninfo   1.2.2      2021-12-06 [2] RSPM #>  systemfonts   1.1.0      2024-05-15 [2] RSPM #>  textshaping   0.4.0      2024-05-24 [2] RSPM #>  vctrs         0.6.5      2023-12-01 [2] RSPM #>  xfun          0.44       2024-05-15 [2] RSPM #>  yaml          2.3.8      2023-12-11 [2] RSPM #>  #>  [1] /private/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/Rtmp28DMZh/temp_libpath2f624fd5eade #>  [2] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"/articles/isoformic_reference_annotation.html","id":"using-tximeta-to-create-linkedtxome","dir":"Articles","previous_headings":"","what":"Using tximeta to create LinkedTxome","title":"Isoformic - Reference Annotation","text":"creating LinkedTxome package tximeta can use FASTA GTF file. case organism databases, everything need GTF file annotation transcripts genes. FASTA file used transcript sequences. Note: even use GENCODE Ensembl, use custom name, like “localGENCODE”, otherwise tximeta try download resources cached versions. isoformic package auxiliary function can help download relevant reference files GENCODE project, Homo sapiens Mus musculus. NOTE:chunk code download approximately 200MB data. run sure need files.","code":"# In this example we are goign to save the files to a temporary directory base_dir <- fs::path_temp(\"isoformic_ref\") base_dir <- fs::path(base_dir, \"gencode_v46\") fs::dir_create(base_dir) # For the GTF file download_reference(   version = \"46\",   reference = \"gencode\",   file_type = \"gtf\",   organism = \"human\",   output_path = base_dir )  # For the transcriptome FASTA file download_reference(   version = \"46\",   reference = \"gencode\",   file_type = \"fasta\",   organism = \"human\",   output_path = base_dir )  # Mouse transcriptome FASTA download_reference(   version = \"M35\",   reference = \"gencode\",   file_type = \"fasta\",   organism = \"mouse\",   output_path = fs::path_temp(isoformic_ref, \"gencode_M35\") ) # fs::dir_create() fs::dir_ls(base_dir) gtf_file_path <- fs::path(base_dir, \"gencode.v46.annotation.gtf.gz\") fasta_file_path <- fs::path(base_dir, \"gencode.v46.transcripts.fa.gz\")  fs::file_exists(gtf_file_path) fs::file_exists(fasta_file_path)  fs::dir_create(base_dir)  fs::dir_exists(\"/var/folders/2q/937_bkg10svdwx1x00prs9nm0000gn/T/RtmpW9sxel/isoformic_ref/gencode_v46\")  json_file_path <- paste0(base_dir, \".json\") fs::file_create(json_file_path)  fs:: tximeta::makeLinkedTxome(   indexDir = base_dir,   source = \"localGENCODE\",   organism = \"Homo sapiens\",   release = \"46\",   genome = \"GRCh38\",   fasta = fasta_file_path,   gtf = gtf_file_path,   write = TRUE,   jsonFile = json_file_path )   tximeta::loadLinkedTxome(\"data-raw/gencode_v33.json\") library(tximeta)  library(macrophage) dir <- system.file(\"extdata\", package = \"macrophage\") fs::dir_ls(dir) tximeta::makeLinkedTxome(   indexDir = file.path(dir, \"gencode.v29_salmon_0.12.0\"),   source = \"localGENCODE\",   organism = \"Homo sapiens\",   release = \"45\",   genome = \"GRCh38\",   fasta = \"ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_29/gencode.v29.transcripts.fa.gz\",   gtf = file.path(dir, \"gencode.v29.annotation.gtf.gz\"), # local version   write = FALSE )"},{"path":"/articles/isoformic_reference_annotation.html","id":"using-custom-gtf-or-gff-files","dir":"Articles","previous_headings":"","what":"Using custom GTF or GFF files","title":"Isoformic - Reference Annotation","text":"","code":"annot_list <- prepare_annotation(\"data-raw/gencode.v46.annotation.gtf.gz\")  annot_list$gene annot_list$transcript annot_list$exon"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lucio Rezende Queiroz. Author, maintainer. Izabela Mamede Conceicao. Author, contributor. Luigi Marchionni. Author, contributor. Gloria Franco. Author, contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Queiroz L, Conceicao , Marchionni L, Franco G (2024). isoformic: Isoformic: isoform-level biological interpretation transcriptomic data. R package version 0.1.0.9006,  https://luciorq.github.io/isoformic/, https://github.com/luciorq/isoformic.","code":"@Manual{,   title = {isoformic: Isoformic: isoform-level biological interpretation of transcriptomic data},   author = {Lucio Rezende Queiroz and Izabela Mamede Conceicao and Luigi Marchionni and Gloria Franco},   year = {2024},   note = {R package version 0.1.0.9006,  https://luciorq.github.io/isoformic/},   url = {https://github.com/luciorq/isoformic}, }"},{"path":"/index.html","id":"isoformic-","dir":"","previous_headings":"","what":"Isoformic: isoform-level biological interpretation of transcriptomic data","title":"Isoformic: isoform-level biological interpretation of transcriptomic data","text":"Welcome isoformic, workflow isoform-level biological interpretation transcriptomic data. workflow uses known annotated transcripts produce biologically relevant results based different types transcripts comparison case versus control transcriptomic data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Isoformic: isoform-level biological interpretation of transcriptomic data","text":"can install development version isoformic GitHub :","code":"if (requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") } remotes::install_github(\"luciorq/isoformic\")"},{"path":[]},{"path":"/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Isoformic: isoform-level biological interpretation of transcriptomic data","text":"Performing differential expression analysis isoform level, rather gene level, important gaining detailed understanding gene regulation functional differences biological systems. gene-level analysis provides insights overall expression changes genes, fails capture complex dynamics occurring isoform level. Isoforms, resulting alternative splicing alternative transcription start sites, can possess distinct structural features functional properties. examining isoform-level expression changes, researchers can identify characterize specific isoforms may unique roles cellular processes, isoform-specific protein-protein interactions protein functions. granularity enables accurate interpretation complex biological phenomena, tissue-specific expression patterns, cell differentiation, disease progression. Additionally, isoform-level analysis can help uncover regulatory mechanisms identify potential biomarkers therapeutic targets may missed solely relying gene-level analysis. Therefore, considering isoform-level expression changes provides comprehensive view transcriptional dynamics enhances understanding gene regulation given biological context.","code":""},{"path":"/reference/check_mae_isoformic_is_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Isoformic mae have a list isoformic slot — check_mae_isoformic_is_list","title":"Check if Isoformic mae have a list isoformic slot — check_mae_isoformic_is_list","text":"Check Isoformic mae list isoformic slot","code":""},{"path":"/reference/check_mae_isoformic_is_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Isoformic mae have a list isoformic slot — check_mae_isoformic_is_list","text":"","code":"check_mae_isoformic_is_list(mae)"},{"path":"/reference/check_mae_isoformic_tx_to_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Isoformic mae have a tx_to_gene — check_mae_isoformic_tx_to_gene","title":"Check if Isoformic mae have a tx_to_gene — check_mae_isoformic_tx_to_gene","text":"Check Isoformic mae tx_to_gene","code":""},{"path":"/reference/check_mae_isoformic_tx_to_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Isoformic mae have a tx_to_gene — check_mae_isoformic_tx_to_gene","text":"","code":"check_mae_isoformic_tx_to_gene(mae)"},{"path":"/reference/check_se_metadata_level_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if content of metadata level slot is a string. — check_se_metadata_level_length","title":"Check if content of metadata level slot is a string. — check_se_metadata_level_length","text":"Check content metadata level slot string.","code":""},{"path":"/reference/check_se_metadata_level_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if content of metadata level slot is a string. — check_se_metadata_level_length","text":"","code":"check_se_metadata_level_length(se)"},{"path":"/reference/check_se_metadata_level_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if content of metadata level slot is a string. — check_se_metadata_level_type","title":"Check if content of metadata level slot is a string. — check_se_metadata_level_type","text":"Check content metadata level slot string.","code":""},{"path":"/reference/check_se_metadata_level_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if content of metadata level slot is a string. — check_se_metadata_level_type","text":"","code":"check_se_metadata_level_type(se)"},{"path":"/reference/create_isoformic_mae_from_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Isoformic Object from SummarizedExperiment — create_isoformic_mae_from_se","title":"Create Isoformic Object from SummarizedExperiment — create_isoformic_mae_from_se","text":"Create Isoformic Object SummarizedExperiment","code":""},{"path":"/reference/create_isoformic_mae_from_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Isoformic Object from SummarizedExperiment — create_isoformic_mae_from_se","text":"","code":"create_isoformic_mae_from_se(se_tx, se_gene, tx_to_gene = NULL)"},{"path":"/reference/create_isoformic_mae_from_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Isoformic Object from SummarizedExperiment — create_isoformic_mae_from_se","text":"se_tx SummarizedExperiment object containing transcript-level differential expression analysis results. se_gene SummarizedExperiment object containing gene-level differential expression analysis results.","code":""},{"path":"/reference/download_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Reference Files From GENCODE — download_reference","title":"Download Reference Files From GENCODE — download_reference","text":"function facilitates downloading reference files GENCODE database. supports downloading GTF, GFF, transcriptome FASTA files human mouse genomes. function ensures correct version file type downloaded handles directory creation file existence checks avoid redundant downloads.","code":""},{"path":"/reference/download_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Reference Files From GENCODE — download_reference","text":"","code":"download_reference(   version = \"46\",   reference = \"gencode\",   organism = c(\"human\", \"mouse\"),   file_type = c(\"gtf\", \"gff\", \"fasta\"),   output_path = \"data-raw\",   timeout_limit = 3600,   method = \"auto\" )"},{"path":"/reference/download_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Reference Files From GENCODE — download_reference","text":"version Character version string. mouse references, letter 'M' version string mandatory. reference Character indicating source reference file. One \"gencode\" \"mane\". Defaults \"gencode\". NOTE: \"mane\" implemented yet. organism Character indicating organism. GENCODE, can \"human\" \"mouse\". file_type Character indicating type file download. One \"gtf\", \"gff\", \"fasta\". Defaults \"gtf\". NOTE: \"fasta\" refers transcriptome FASTA. output_path Character specifying directory downloaded file saved. Defaults \"data-raw\". timeout_limit Numeric value specifying time seconds download limit. argument takes precedence base::options(\"timeout\"). Defaults 3600 seconds (1 Hour). method Character specifying method used utils::download.file(). Defaults \"auto\"","code":""},{"path":"/reference/download_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Reference Files From GENCODE — download_reference","text":"character string full path downloaded file.","code":""},{"path":"/reference/is_deg_sig.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Differential Gene Expression Results to Transcript Table — is_deg_sig","title":"Add Differential Gene Expression Results to Transcript Table — is_deg_sig","text":"Add Differential Gene Expression Results Transcript Table","code":""},{"path":"/reference/is_deg_sig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Differential Gene Expression Results to Transcript Table — is_deg_sig","text":"","code":"is_deg_sig(DegsigVector, DET_table)"},{"path":"/reference/isoformic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"isoformic: Isoformic: isoform-level biological interpretation of transcriptomic data — isoformic-package","title":"isoformic: Isoformic: isoform-level biological interpretation of transcriptomic data — isoformic-package","text":"Isoform-level biological interpretation transcriptomic data.","code":""},{"path":[]},{"path":"/reference/isoformic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"isoformic: Isoformic: isoform-level biological interpretation of transcriptomic data — isoformic-package","text":"Maintainer: Lucio Rezende Queiroz luciorqueiroz@gmail.com (ORCID) Authors: Izabela Mamede Conceicao iza.mamede@gmail.com (ORCID) [contributor] Luigi Marchionni lum4003@med.cornell.edu (ORCID) [contributor] Gloria Franco gfranco@ufmg.br (ORCID) [contributor]","code":""},{"path":"/reference/join_DEG_DET.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Gene and Transcript Level Differential Expression Tables — join_DEG_DET","title":"Merge Gene and Transcript Level Differential Expression Tables — join_DEG_DET","text":"Merge Gene Transcript Level Differential Expression Tables","code":""},{"path":"/reference/join_DEG_DET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Gene and Transcript Level Differential Expression Tables — join_DEG_DET","text":"","code":"join_DEG_DET(DEG_tab, DET_final_tab, logfc_cut, pval_cut)"},{"path":"/reference/make_tx_to_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Transcript to Gene Relationship Table — make_tx_to_gene","title":"Create Transcript to Gene Relationship Table — make_tx_to_gene","text":"function can extract transcript gene relationship table GENCODE annotation files, transcriptome FASTA GFF3 GTF annotation files.","code":""},{"path":"/reference/make_tx_to_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Transcript to Gene Relationship Table — make_tx_to_gene","text":"","code":"make_tx_to_gene(file_path, file_type = \"fasta\")"},{"path":"/reference/make_tx_to_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Transcript to Gene Relationship Table — make_tx_to_gene","text":"file_path Path file containing reference. file_type Character indicating type file download. One \"gtf\", \"gff\", \"fasta\". Defaults \"gtf\". NOTE: \"fasta\" refers transcriptome FASTA.","code":""},{"path":"/reference/modify_lnc_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit the lncRNA start and end table Table of lncRNA starts and ends plus a value to add — modify_lnc_ranges","title":"Edit the lncRNA start and end table Table of lncRNA starts and ends plus a value to add — modify_lnc_ranges","text":"Edit lncRNA start end table Table lncRNA starts ends plus value add","code":""},{"path":"/reference/modify_lnc_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit the lncRNA start and end table Table of lncRNA starts and ends plus a value to add — modify_lnc_ranges","text":"","code":"modify_lnc_ranges(lncRNA_start_end, value_to_add)"},{"path":"/reference/modify_lnc_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit the lncRNA start and end table Table of lncRNA starts and ends plus a value to add — modify_lnc_ranges","text":"lncRNA_start_end Genomic position lncRNA annotation Starts. value_to_add Value add lncRNA annotation.","code":""},{"path":"/reference/plot_log2FC.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Log2 Fold-Change Results — plot_log2FC","title":"Plot Log2 Fold-Change Results — plot_log2FC","text":"Plot Log2 Fold-Change Results","code":""},{"path":"/reference/plot_log2FC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Log2 Fold-Change Results — plot_log2FC","text":"","code":"plot_log2FC(DEG_DET_table, selected_gene, custom_colors = NULL)"},{"path":"/reference/plot_tx_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Transcript Genomic Context — plot_tx_context","title":"Plot Transcript Genomic Context — plot_tx_context","text":"function plots genomic context transcripts given genes.","code":""},{"path":"/reference/plot_tx_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Transcript Genomic Context — plot_tx_context","text":"","code":"plot_tx_context(exon_table, custom_colors = NULL)"},{"path":"/reference/plot_tx_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Transcript Genomic Context — plot_tx_context","text":"exon_table tibble exon information. Must contain columns tx_id, exon_left, exon_right. custom_colors vector colors use transcript. provided, function use default colors. Actually, argument *implemented yet.","code":""},{"path":"/reference/plot_tx_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Transcript per gene expression — plot_tx_expr","title":"Plot Transcript per gene expression — plot_tx_expr","text":"Plot Transcript per gene expression","code":""},{"path":"/reference/plot_tx_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Transcript per gene expression — plot_tx_expr","text":"","code":"plot_tx_expr(genes_to_plot, profile_data)"},{"path":"/reference/plot_tx_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Transcript per gene expression — plot_tx_expr","text":"genes_to_plot character vector gene names profile_data tibble output prepare_profile_data","code":""},{"path":"/reference/plot_tx_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Transcript per gene expression — plot_tx_expr","text":"ggplot object","code":""},{"path":"/reference/prepare_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Annotation — prepare_annotation","title":"Prepare Annotation — prepare_annotation","text":"Prepare annotation imported rowRanges rowData Genes, Transcripts Exons based Position Annotation Table. GTF GFF3 annotation file.","code":""},{"path":"/reference/prepare_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Annotation — prepare_annotation","text":"","code":"prepare_annotation(file_path, file_type = c(\"gtf\", \"gff\"))"},{"path":"/reference/prepare_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Annotation — prepare_annotation","text":"file_path Path annotation file. file_type Character indicating type file download. One \"gtf\" \"gff\". Defaults \"gtf\".","code":""},{"path":"/reference/prepare_exon_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Exon based Position Annotation Table — prepare_exon_annotation","title":"Prepare Exon based Position Annotation Table — prepare_exon_annotation","text":"Prepare Exon based Position Annotation Table","code":""},{"path":"/reference/prepare_exon_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Exon based Position Annotation Table — prepare_exon_annotation","text":"","code":"prepare_exon_annotation(gene_name, file_path, file_type = c(\"gff\"))"},{"path":"/reference/prepare_exon_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Exon based Position Annotation Table — prepare_exon_annotation","text":"file_path Path annotation file. file_type Character indicating type file download. One \"gtf\", \"gff\", \"fasta\". Defaults \"gtf\". NOTE: \"fasta\" refers transcriptome FASTA. gene_names String vector gene names extract.","code":""},{"path":"/reference/prepare_profile_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Data for Profile Plot — prepare_profile_data","title":"Prepare Data for Profile Plot — prepare_profile_data","text":"Prepare Data Profile Plot","code":""},{"path":"/reference/prepare_profile_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Data for Profile Plot — prepare_profile_data","text":"","code":"prepare_profile_data(   txi_gene = NULL,   txi_transcript,   sample_metadata,   tx_to_gene,   de_result_gene,   de_result_transcript,   var,   var_levels,   gene_col = \"gene_name\",   tx_col = \"transcript_name\",   pvalue_cutoff = 0.05,   lfc_cutoff = 1,   use_fdr = TRUE )"},{"path":"/reference/prepare_profile_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Data for Profile Plot — prepare_profile_data","text":"tibble data plot.","code":""},{"path":"/reference/run_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Functional Analysis — run_enrichment","title":"Run Functional Analysis — run_enrichment","text":"Run Functional Analysis","code":""},{"path":"/reference/run_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Functional Analysis — run_enrichment","text":"","code":"run_enrichment(det_df, genesets_list, pval_cutoff = 0.05, lfc_cutoff = 1)"},{"path":"/reference/run_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Functional Analysis — run_enrichment","text":"det_df data.frame differential expression transcripts genesets_list list gene sets used enrichment analysis pval_cutoff p-value cutoff enrichment analysis lfc_cutoff log2 fold change cutoff enrichment analysis","code":""},{"path":"/reference/run_swish_pairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Swish Differential Expression — run_swish_pairwise","title":"Run Swish Differential Expression — run_swish_pairwise","text":"Run swish method SummarizedExperiment inferential replicates.","code":""},{"path":"/reference/run_swish_pairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Swish Differential Expression — run_swish_pairwise","text":"","code":"run_swish_pairwise(se, contrast_var = \"condition\", ...)"},{"path":"/reference/run_swish_pairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Swish Differential Expression — run_swish_pairwise","text":"se SummarizedExperiment object. contrast_var column name colData(se). ... Additional arguments passed fishpond::swish().","code":""},{"path":"/reference/run_swish_pairwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Swish Differential Expression — run_swish_pairwise","text":"SummarizedExperiment object.","code":""},{"path":"/reference/se_experiment_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Return SummarizedExperiment Experiment Level — se_experiment_level","title":"Return SummarizedExperiment Experiment Level — se_experiment_level","text":"Check level quantification ","code":""},{"path":"/reference/se_experiment_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return SummarizedExperiment Experiment Level — se_experiment_level","text":"","code":"se_experiment_level(se)"},{"path":"/reference/se_experiment_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return SummarizedExperiment Experiment Level — se_experiment_level","text":"se object class SummarizedExperiment. type String containing one c(\"txp\", \"gene\").","code":""},{"path":"/reference/validate_isoformic_mae.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Isoformic Object — validate_isoformic_mae","title":"Validate Isoformic Object — validate_isoformic_mae","text":"Validate MultiAssayExperiment object compatible {isoformic}. Also, validates {isoformic} preparation steps executed object.","code":""},{"path":"/reference/validate_isoformic_mae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Isoformic Object — validate_isoformic_mae","text":"","code":"validate_isoformic_mae(mae)"},{"path":"/reference/validate_isoformic_mae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Isoformic Object — validate_isoformic_mae","text":"mae MultiAssayExperiment object validated.","code":""},{"path":"/reference/validate_isoformic_mae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Isoformic Object — validate_isoformic_mae","text":"MultiAssayExperiment object valid {isoformic} slots.","code":""},{"path":[]},{"path":"/news/index.html","id":"reference-and-annotation-0-1-0-900","dir":"Changelog","previous_headings":"","what":"Reference and Annotation","title":"isoformic v0.1.0.900* Development Version","text":"download_reference(): now supports organism = c(\"human\", \"mouse\"), organism = \"human\" default. download_reference(): argument file_type = \"gtf\" default. prepare_annotation(): Parse GTF GFF file formats required annotation data.","code":""},{"path":"/news/index.html","id":"differential-expression-analysis-0-1-0-900","dir":"Changelog","previous_headings":"","what":"Differential Expression Analysis","title":"isoformic v0.1.0.900* Development Version","text":"created run_swish_pairwise() function.","code":""},{"path":"/news/index.html","id":"isoformic-v010","dir":"Changelog","previous_headings":"","what":"isoformic v0.1.0","title":"isoformic v0.1.0","text":"Initial support SummarizedExperiment MultiAssayExperiment.","code":""},{"path":"/news/index.html","id":"isoformic-v001","dir":"Changelog","previous_headings":"","what":"isoformic v0.0.1","title":"isoformic v0.0.1","text":"Release initial workflow.","code":""}]
